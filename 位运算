用于对整数类型(int,char，long等）变量中的某一位(bit)，或者若干位进行操作。比如:
1)判断某一位是否为1
2)只改变其中某一位，而保持其他位都不变。

C/C++语言提供了六种位运算符来进行位运算操作:
&     按位与(双目)
|     按位或(双目)
^     按位异或(双目)
~     按位非(取反)(单目)
<<    左移(双目)
>>    右移(双目)


按位与“&”
将参与运算的两操作数各对应的二进制位进行与操作，
只有对应的两个二进位均为1时，结果的对应二进制位才为1，否则为0。
例如：表达式“21 & 18”的计算结果是16(即二进制数10000)，因为：
21用二进制数表示就是
0000 0000 0000 0000 0000 0000 0001 0101
18用二进制数表示就是
0000 0000 0000 0000 0000 0000 0001 0010
二者按位与所得结果就是
0000 0000 0000 0000 0000 0000 0001 0000

通常用来将某变量中的某些位清0且同时保留其他位不变。
也可以用来获取某变量中的某一位。
例如，如果需要将int型变量n的低8位全置成0，而其余位不变，则可以执行:
n = n & 0xffffff00;
也可以写成
n &= 0xffffff00;
如果n是short类型，则只需执行
n &= 0xff00;

















