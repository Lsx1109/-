描述
给定一个整数，判断该数是奇数还是偶数。
输入
输入仅一行，一个大于零的正整数n。
输出
输出仅一行，如果n是奇数，输出odd；如果n是偶数，输出even。
int n;
cin >> n;
if (n % 2)
		cout << "odd";
else
		cout << "even";
return 0;
  

描述
利用公式x1 = (-b + sqrt(b*b-4*a*c))/(2*a), x2 = (-b - sqrt(b*b-4*a*c))/(2*a)求一元二次方程ax2+ bx + c =0的根，其中a不等于0。
输入
输入一行，包含三个浮点数a, b, c（它们之间以一个空格分开），分别表示方程ax2 + bx + c =0的系数。
输出
输出一行，表示方程的解。
若b2 = 4 * a * c,则两个实根相等，则输出形式为：x1=x2=...。
若b2 > 4 * a * c,则两个实根不等，则输出形式为：x1=...;x2 = ...，其中x1>x2。
若b2 < 4 * a * c，则有两个虚根，则输出：x1=实部+虚部i; x2=实部-虚部i，即x1的虚部系数大于等于x2的虚部系数，实部为0时不可省略。实部 = -b / (2*a), 虚部 = sqrt(4*a*c-b*b) / (2*a)
所有实数部分要求精确到小数点后5位，数字、符号之间没有空格。
#include <iostream>
#include <cstdio>
#include <cmath>
#define eps 1e-7//定义一个很小的数 
using namespace std;
int main()
{
	double a,b,c;
	double x1=0,x2=0,n,d,e;
	scanf("%lf%lf%lf",&a,&b,&c);
	n=b*b - 4*a*c;
	if ( n>0){
    	x1=(-b + sqrt(n))/(2*a);//sqrt(n)求平方根
		x2 = (-b - sqrt(n))/(2*a);
		if(x1>x2)
			printf("x1=%.5f;x2=%.5f",x1,x2);
		else	
			printf("x1=%.5f;x2=%.5f",x2,x1);		
	}
    else if (n-0>-eps&&n-0<eps){/*判断两个浮点数相等,
	不能直接用 a == b形式，
	应该用 a-b> -eps && a-b < eps 形式，
	eps是很小的数，比如 1e-7 */ 
		x1=(-b + sqrt(n))/(2*a);
		printf("x1=x2=%.5f",x1);
	}	
	else {
		d = 0-b / (2*a);//要写成0-b,不然b为0时，0前面有负号
		e = sqrt(0-n) / (2*a);
		printf("x1=%.5f+%.5fi;x2=%.5f-%.5fi",d,e,d,e);
	}
	return 0;
}


描述
有一个正方形，四个角的坐标（x,y)分别是（1，-1），（1，1），（-1，-1），（-1，1），x是横轴，y是纵轴。写一个程序，判断一个给定的点是否在这个正方形内（包括正方形边界）。
输入
输入一行，包括两个整数x、y，以一个空格分开，表示坐标(x,y)。
输出
输出一行，如果点在正方形内，则输出yes，否则输出no。
#include<iostream>
using namespace std;
int main()
{
    int x,y;
    cin>>x>>y;
    if(x<=1 && x>=-1){
        if(y<=1 && y>=-1){
            cout<<"yes"<<endl;
        }
        else cout<<"no"<<endl;
    }
    else cout<<"no"<<endl;
    return 0;
}


描述
你买了一箱n个苹果，很不幸的是买完时箱子里混进了一条虫子。虫子每x小时能吃掉一个苹果，假设虫子在吃完一个苹果之前不会吃另一个，那么经过y小时你还有多少个完整的苹果？
输入
输入仅一行，包括n，x和y（均为整数）。
输出
输出也仅一行，剩下的苹果个数
#include<iostream>
using namespace std;
int main()
{
    int n,x,y;
    cin>>n>>x>>y;
    if(n-y/x<=0){
        cout<<"0"<<endl;
    }
    else{
    if(y%x==0){
        cout<<n-y/x<<endl;
    }
    else cout<<n-y/x-1<<endl;}
    return 0;
}


描述
一个最简单的计算器，支持+, -, *, / 四种运算。仅需考虑输入输出为整数的情况，数据和运算结果不会超过int表示的范围。
输入
输入只有一行，共有三个参数，其中第1、2个参数为整数，第3个参数为操作符（+,-,*,/）。
输出
输出只有一行，一个整数，为运算结果。然而：
1. 如果出现除数为0的情况，则输出：Divided by zero!
2. 如果出现无效的操作符(即不为 +, -, *, / 之一），则输出：Invalid operator!
#include<iostream>
using namespace std;
int main()
{
    int x,y;
    char r;
    cin>>x>>y>>r;
    if(y==0 && int(r)==int('/')){
        cout<<"Divided by zero!"<<endl;
    }
    else{
    switch(int(r)){
        case int('+'):
            cout<<x+y<<endl;
            break;
        case int('-'):
            cout<<x-y<<endl;
            break;
        case int('*'):
            cout<<x*y<<endl;
            break;
        case int('/'):
            cout<<x/y<<endl;
            break;
        default:
            cout<<"Invalid operator!"<<endl;
    }
    }
    return 0;
}


描述
读入n（1 <= n <= 10000）个整数，求它们的和与均值。
输入
输入第一行是一个整数n，表示有n个整数。
第2~n+1行每行包含1个整数。每个整数的绝对值均不超过10000。
输出
输出一行，先输出和，再输出平均值（保留到小数点后5位），两个数间用单个空格分隔。
#include<iostream>
using namespace std;
int main()
{
    int n,a,sum=0;
    scanf("%d",&n);
    for(int i=0;i<n;i++){
        scanf("%d",&a);
        sum+=a;
    }
    printf("%d %.5f",sum,double(sum)/n);
    return 0;
}


描述
给定一个长度为n的非负整数序列，请计算序列的最大跨度值（最大跨度值 = 最大值减去最小值）。
输入
一共2行，第一行为序列的个数n（1 <= n <= 1000)，第二行为序列的n个不超过1000的非负整数，整数之间以一个空格分隔。
输出
输出一行，表示序列的最大跨度值。
#include<iostream>
using namespace std;
int main()
{
    int n,a,max=0,min=1000;
    scanf("%d",&n);
    for(int i=0;i<n;i++){
        scanf("%d",&a);
        if(a>max) max=a;
        if(a<min) min=a;
    }
    printf("%d",max-min);
    return 0;
}


描述
2008年北京奥运会，A国的运动员参与了n天的决赛项目(1≤n≤17)。现在要统计一下A国所获得的金、银、铜牌数目及总奖牌数。
输入
输入n＋1行，第1行是A国参与决赛项目的天数n，其后n行，每一行是该国某一天获得的金、银、铜牌数目，以一个空格分开。
输出
输出1行，包括4个整数，为A国所获得的金、银、铜牌总数及总奖牌数，以一个空格分开。
#include<iostream>
using namespace std;
int main()
{
    int n,a,b,c,suma=0,sumb=0,sumc=0,sum=0;
    cin>>n;
    for(int i=0;i<n;i++){
        cin>>a>>b>>c;
        suma+=a;
        sumb+=b;
        sumc+=c;
    }
    sum=suma+sumb+sumc;
    cout<<suma<<" "<<sumb<<" "<<sumc<<" "<<sum<<endl;
    return 0;
}


描述
给出一个整数a和一个正整数n，求乘方an。
输入
一行，包含两个整数a和n。-1000000 <= a <= 1000000，1 <= n <= 10000。
输出
一个整数，即乘方结果。题目保证最终结果的绝对值不超过1000000。
#include<iostream>
using namespace std;
int main()
{
    int n,a,t=1;
    cin>>a>>n;
    for(int i=0;i<n;i++){
        t*=a;
    }
    cout<<t;
    return 0;
}




































