并非达到指定次数，而是满足某条件时即停止循环，则适合用while语句循环。
while(表达式)                     while（true）
{                                {
    语句组                            语句组
}                                }//死循环，可以用break跳出
1）判断“表达式”是否为真，若不为真，则转4）
2）执行“语句组”
3）转1）
4）while语句结束，继续执行后面语句

遇到break停止所有循环，直接终止循环，即永久终止循环
continue终止本次循环，后边代码不会再执行


例题：输入若干不超过100的正整数，输出其中最大值，最小值，以及所有数的和。输入的最后一个数是0，标志着输入的结束。
int sum = 0, max = 0, min = 101, n;
cin >> n;
while (n){
    if (n > max) max = n;
    if (n < min) min = n;
    sum += n;
    cin >> n;
}
cout << max << "," << min << "," << sum;


int main()
{
	int i = 1;
	while (i<=10)
	{
		printf("%d\n", i);
		i++;
	}
	return 0;
}



int main()
{
	int i = 1;
	while (i<=10)
	{
		if (i == 5)
			break;
		printf("%d\n", i);
		i++;
	}
	return 0;
}



int main()
{
	int i = 0;
	while (i<=10)
	{
		i++;
		if (i == 5)
			continue;
		printf("%d\n", i);
		
	}
	return 0;
}



int main()
{
	int i = 1;
	while (i<=10)
	{
		if (i == 5)
			continue;
		printf("%d\n", i);
		i++;
	}
	return 0;
}


int main()
{
	int ch = 0;
	//ctrl + z
	//EOF=end of file -> -1
	while ((ch=getchar()) !=EOF)
	{
		putchar(ch);
	}
	return 0;
}


int main()
{
	int ret = 0;
	char password[20] = { 0 };
	printf("请输入密码:>");
	scanf_s("%s", password);//输入密码，并存放在password数组中
	printf("请确认(Y\N):>");
	ret = getchar();//Y\N
	if (ret == 'Y')
	{
		printf("确认成功\n");
	}
	else
	{
		printf("放弃确认\n");
	}
	return 0;
}



int main()
{
	int ret = 0;
	int ch = 0;
	char password[20] = { 0 };
	printf("请输入密码:>");
	scanf_s("%s", password);//输入密码，并存放在password数组中
	//缓冲区还剩一个'\n'
	//读取一下'\n'
	while ((ch = getchar()) != '\n')
	{
		;
	}
	getchar();
	printf("请确认(Y/N):>");
	ret = getchar();//Y\N
	if (ret == 'Y')
	{
		printf("确认成功\n");
	}
	else
	{
		printf("放弃确认\n");
	}
	return 0;
}




int main()
{
	int ch = 0;
	while ((ch=getchar()) !=EOF)
	{
		if (ch<'0' || ch>'9')
			continue;
		putchar(ch);
	}
	return 0;
}





